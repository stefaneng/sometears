[{"path":"https://stefaneng.github.io/sometears/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stefan E. Eng. Author, maintainer. Jacob Vidergar. Contributor. Ye Tian. Contributor.","code":""},{"path":"https://stefaneng.github.io/sometears/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eng S (2024). sometears: NOTEARS objective optimization. R package version 0.1.0, https://stefaneng.github.io/sometears/.","code":"@Manual{,   title = {sometears: NOTEARS objective optimization},   author = {Stefan E. Eng},   year = {2024},   note = {R package version 0.1.0},   url = {https://stefaneng.github.io/sometears/}, }"},{"path":[]},{"path":"https://stefaneng.github.io/sometears/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"NOTEARS objective optimization","text":"Network structure learning involves finding optimal solutions constraints traits interest directed acyclic graph (DAG) structure. Optimizing objective function combinatorial constraint DAG difficult problem due number DAGs increasing super-exponentially (Rodionov, 1992) difficult explore entire graph space. issue finding directed acyclic graph related finding topological sort graph, .e., temporal ordering nodes graph < j, edge node j node . ordering generally unique exists graph acyclic. Recent work involved transforming combinatorial acyclicity constraint continuous optimization problem (Bello et al., 2023; Wei et al., 2020; Zheng et al., 2018). objective function DAG constraint non-convex issues local optimum. latest work sequence papers aims escape local optima swapping nodes valid topological orderings explore regions DAG space topological swaps (Deng et al., 2023).","code":""},{"path":"https://stefaneng.github.io/sometears/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"NOTEARS objective optimization","text":"Bello, K., Aragam, B., & Ravikumar, P. (2023). DAGMA: Learning DAGs via M-matrices Log-Determinant Acyclicity Characterization (arXiv:2209.08037). arXiv. https://doi.org/10.48550/arXiv.2209.08037 Deng, C., Bello, K., Aragam, B., & Ravikumar, P. (2023). Optimizing NOTEARS Objectives via Topological Swaps (arXiv:2305.17277). arXiv. https://doi.org/10.48550/arXiv.2305.17277 Rodionov, V. . (1992). number labeled acyclic digraphs. Discrete Mathematics, 105(1), 319–321. https://doi.org/10.1016/0012-365X(92)90155-9 Sachs, K., Perez, O., Pe’er, D., Lauffenburger, D. ., & Nolan, G. P. (2005). Causal Protein-Signaling Networks Derived Multiparameter Single-Cell Data. Science, 308(5721), 523–529. https://doi.org/10.1126/science.1105809 Wei, D., Gao, T., & Yu, Y. (2020). DAGs Fears: Closer Look Continuous Optimization Learning Bayesian Networks. Advances Neural Information Processing Systems, 33, 3895–3906. https://papers.nips.cc/paper/2020/hash/28a7602724ba16600d5ccc644c19bf18-Abstract.html Zheng, X., Aragam, B., Ravikumar, P., & Xing, E. P. (2018). DAGs TEARS: Continuous Optimization Structure Learning (arXiv:1803.01422). arXiv. https://doi.org/10.48550/arXiv.1803.01422","code":""},{"path":"https://stefaneng.github.io/sometears/reference/fit_topo.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit TOPO from Deng et al 2023 — fit_topo","title":"Fit TOPO from Deng et al 2023 — fit_topo","text":"Fit TOPO Deng et al 2023","code":""},{"path":"https://stefaneng.github.io/sometears/reference/fit_topo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit TOPO from Deng et al 2023 — fit_topo","text":"","code":"fit_topo(   X,   topo = 1:ncol(X),   size_small = NULL,   size_large = NULL,   use_large_space = d <= 10,   model_type = c(\"linear\", \"nonlinear\"),   loss_type = c(\"l2\"),   h_func = h_logdet,   h_func_grad = h_logdet_grad,   s = 1.1,   verbose = F )"},{"path":"https://stefaneng.github.io/sometears/reference/fit_topo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit TOPO from Deng et al 2023 — fit_topo","text":"X matrix data columns variable interest directed acyclic graph topo vector integers indicating initial topological order variables size_small minimum size search space. size_large maximum size search space. use_large_space boolean indicating search space expanded minimum size sufficient. model_type type model fit. Currently linear models supported. loss_type Currently supports l2 loss h_func continuous acyclic function use. See h_logdet. h_func_grad gradient acyclic funtion use. See h_logdet_grad. s penalty parameter logdet function. larger spectral radius X. verbose boolean indicating function print progress","code":""},{"path":"https://stefaneng.github.io/sometears/reference/fit_topo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit TOPO from Deng et al 2023 — fit_topo","text":"list containing estimated W matrix, topological order, Z matrix, loss","code":""},{"path":"https://stefaneng.github.io/sometears/reference/fit_topo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit TOPO from Deng et al 2023 — fit_topo","text":"","code":"B <- matrix( c(0, 3, 3, 1,   0, 0, 1, 5,   0, 0, 0, 1,   0, 0, 0, 0), nrow = 4, ncol = 4, byrow = TRUE)  d <- ncol(B) X <- sim_linear_sem(B, n = 1000, Sigma = diag(0.01, nrow = d)) #> Error in sim_linear_sem(B, n = 1000, Sigma = diag(0.01, nrow = d)): could not find function \"sim_linear_sem\" (est_B <- fit_topo(X, d:1)) #> Error: object 'X' not found"},{"path":"https://stefaneng.github.io/sometears/reference/h_expm.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements the matrix exponential acyclicity regularizer from DAGs with no TEARS (Zheng et al 2018) — h_expm","title":"Implements the matrix exponential acyclicity regularizer from DAGs with no TEARS (Zheng et al 2018) — h_expm","text":"Implements matrix exponential acyclicity regularizer DAGs TEARS (Zheng et al 2018)","code":""},{"path":"https://stefaneng.github.io/sometears/reference/h_expm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements the matrix exponential acyclicity regularizer from DAGs with no TEARS (Zheng et al 2018) — h_expm","text":"","code":"h_expm(W, include_grad = FALSE)  h_expm_grad(W)"},{"path":"https://stefaneng.github.io/sometears/reference/h_expm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements the matrix exponential acyclicity regularizer from DAGs with no TEARS (Zheng et al 2018) — h_expm","text":"W weighted adjacency matrix include_grad whether include gradient regularizer","code":""},{"path":"https://stefaneng.github.io/sometears/reference/h_expm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements the matrix exponential acyclicity regularizer from DAGs with no TEARS (Zheng et al 2018) — h_expm","text":"either list gradient included scalar","code":""},{"path":"https://stefaneng.github.io/sometears/reference/h_expm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Implements the matrix exponential acyclicity regularizer from DAGs with no TEARS (Zheng et al 2018) — h_expm","text":"","code":"X <- matrix(0, nrow = 3, ncol = 3) X_lower <- lower.tri(X)  # DAG h_expm(lower.tri(X)) #> [1] 0  # Not a DAG X2 <- X_lower X2[1, 2] <- 1 h_expm(X2) #> [1] 1.086161"},{"path":"https://stefaneng.github.io/sometears/reference/h_logdet.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the log-determinant acyclicity characterization — h_logdet","title":"Computes the log-determinant acyclicity characterization — h_logdet","text":"function exactly zero matrix DAG. gradient gradient log-determinant acyclicity characterization also zero exactly matrix DAG.","code":""},{"path":"https://stefaneng.github.io/sometears/reference/h_logdet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the log-determinant acyclicity characterization — h_logdet","text":"","code":"h_logdet(X, s = 1, transform = c(\"square\", \"abs\"))  h_logdet_grad(X, s = 1)"},{"path":"https://stefaneng.github.io/sometears/reference/h_logdet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the log-determinant acyclicity characterization — h_logdet","text":"X matrix s regularization parameter. larger spectral radius (largest absolute eigenvalue) X.","code":""},{"path":"https://stefaneng.github.io/sometears/reference/h_logdet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the log-determinant acyclicity characterization — h_logdet","text":"numeric","code":""},{"path":"https://stefaneng.github.io/sometears/reference/h_logdet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes the log-determinant acyclicity characterization — h_logdet","text":"Bello, K., Aragam, B., & Ravikumar, P. (2023).","code":""},{"path":"https://stefaneng.github.io/sometears/reference/h_logdet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the log-determinant acyclicity characterization — h_logdet","text":"","code":"B <- matrix(c(0, 0.6, -0.5, 0), nrow = 2, byrow = TRUE) h_logdet(B) # Not a DAG means > 0 #> [1] 0.09431068 B_dag <- matrix(c(0,0,1,0), nrow = 2, byrow = TRUE) h_logdet(B_dag) # DAG means 0 #> [1] 0"},{"path":"https://stefaneng.github.io/sometears/reference/is_dag.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if matrix is a directed acyclic graph — is_dag","title":"Checks if matrix is a directed acyclic graph — is_dag","text":"Checks matrix directed acyclic graph","code":""},{"path":"https://stefaneng.github.io/sometears/reference/is_dag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if matrix is a directed acyclic graph — is_dag","text":"","code":"is_dag(W, threshold = 1e-05)"},{"path":"https://stefaneng.github.io/sometears/reference/is_dag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if matrix is a directed acyclic graph — is_dag","text":"W matrix represents directed graph threshold threshold determine value zero","code":""},{"path":"https://stefaneng.github.io/sometears/reference/is_dag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if matrix is a directed acyclic graph — is_dag","text":"boolean indicating matrix directed acyclic graph","code":""},{"path":"https://stefaneng.github.io/sometears/reference/is_dag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks if matrix is a directed acyclic graph — is_dag","text":"","code":"d <- 100 B <- matrix(0, d, d) idx <- sample(1:d) B[lower.tri(B)] <- runif(d*(d - 1) / 2, min = 1, max = 100) is_dag(B[idx, idx]) # DAG #> [1] TRUE  B[1,10] <- 1 is_dag(B[idx, idx]) # Not a DAG #> [1] FALSE"},{"path":"https://stefaneng.github.io/sometears/reference/spectral_radius.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the spectral radius (the largest absolute eigenvalue) of a matrix — spectral_radius","title":"Computes the spectral radius (the largest absolute eigenvalue) of a matrix — spectral_radius","text":"Computes spectral radius (largest absolute eigenvalue) matrix","code":""},{"path":"https://stefaneng.github.io/sometears/reference/spectral_radius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the spectral radius (the largest absolute eigenvalue) of a matrix — spectral_radius","text":"","code":"spectral_radius(W)"},{"path":"https://stefaneng.github.io/sometears/reference/spectral_radius.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the spectral radius (the largest absolute eigenvalue) of a matrix — spectral_radius","text":"W matrix","code":""},{"path":"https://stefaneng.github.io/sometears/reference/spectral_radius.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the spectral radius (the largest absolute eigenvalue) of a matrix — spectral_radius","text":"spectral radius matrix","code":""},{"path":"https://stefaneng.github.io/sometears/reference/spectral_radius.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the spectral radius (the largest absolute eigenvalue) of a matrix — spectral_radius","text":"","code":"B <- matrix(c(0, 0.6, -0.5, 0), nrow = 2, byrow = TRUE) spectral_radius(B) #> [1] 0.5477226"},{"path":"https://stefaneng.github.io/sometears/reference/threshold_W.html","id":null,"dir":"Reference","previous_headings":"","what":"Threshold a matrix by setting the variables less than threshold to 0 — threshold_W","title":"Threshold a matrix by setting the variables less than threshold to 0 — threshold_W","text":"Threshold matrix setting variables less threshold 0","code":""},{"path":"https://stefaneng.github.io/sometears/reference/threshold_W.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Threshold a matrix by setting the variables less than threshold to 0 — threshold_W","text":"","code":"threshold_W(W, threshold = 0.3)"},{"path":"https://stefaneng.github.io/sometears/reference/threshold_W.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Threshold a matrix by setting the variables less than threshold to 0 — threshold_W","text":"W matrix threshold threshold value","code":""},{"path":"https://stefaneng.github.io/sometears/reference/threshold_W.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Threshold a matrix by setting the variables less than threshold to 0 — threshold_W","text":"W values less threshold set 0","code":""},{"path":"https://stefaneng.github.io/sometears/reference/threshold_W.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Threshold a matrix by setting the variables less than threshold to 0 — threshold_W","text":"","code":"W <- matrix(c(0, 0.6, -0.5, 1e-3), nrow = 2, byrow = TRUE) threshold_W(W, threshold = 0.1) #>      [,1] [,2] #> [1,]  0.0  0.6 #> [2,] -0.5  0.0"},{"path":"https://stefaneng.github.io/sometears/reference/total_direct_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts total effects to direct effects and visa verse — total_to_direct","title":"Converts total effects to direct effects and visa verse — total_to_direct","text":"Assuming matrix total linear effects W can convert matrix direct effects W_dir assume W_tot = W_dir + W_dir^2 + W_dir^3 + ... can solve W_dir = - (+ W_tot)^-1 assume spectral radius (largest absolute eigenvalue) W_dir < 1 condition abs(eigenvalue(W_tot) / (1 + eigenvalue(W_tot))) < 1","code":""},{"path":"https://stefaneng.github.io/sometears/reference/total_direct_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts total effects to direct effects and visa verse — total_to_direct","text":"","code":"total_to_direct(W, restrict_dag = TRUE, enforce_spectral_radius = TRUE)  direct_to_total(W, restrict_dag = TRUE)"},{"path":"https://stefaneng.github.io/sometears/reference/total_direct_conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts total effects to direct effects and visa verse — total_to_direct","text":"W matrix total/direct linear effects restrict_dag boolean indicating matrix must directed acyclic graph enforce_spectral_radius boolean indicating spectral radius W_dir must less 1. Generally recommended disable","code":""},{"path":"https://stefaneng.github.io/sometears/reference/total_direct_conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts total effects to direct effects and visa verse — total_to_direct","text":"matrix direct effects","code":""},{"path":"https://stefaneng.github.io/sometears/reference/total_direct_conversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts total effects to direct effects and visa verse — total_to_direct","text":"","code":"B <- matrix(c(0, 0.6, -0.5, 0), nrow = 2, byrow = TRUE) total_to_direct(B,  restrict_dag = F) #>            [,1]      [,2] #> [1,]  0.2307692 0.4615385 #> [2,] -0.3846154 0.2307692 all(zapsmall(direct_to_total(total_to_direct(B, restrict_dag = F), restrict_dag = F)) == B) #> Error in direct_to_total(total_to_direct(B, restrict_dag = F), restrict_dag = F): could not find function \"direct_to_total\"  B2 <- matrix(c(0,0,0,              1,0,0,              1,1,0), nrow = 3, byrow = TRUE) total_to_direct(B2) #>      [,1] [,2] [,3] #> [1,]    0    0    0 #> [2,]    1    0    0 #> [3,]    0    1    0"}]
